sequenceDiagram
    participant U as ユーザー
    participant LP as ランディングページ<br/>(Next.js)
    participant Z as Zustand Store<br/>(状態管理)
    participant IF as 入力フォーム<br/>(React Hook Form)
    participant API as API Routes<br/>(Next.js Server)
    participant CSV as CSVファイル<br/>(サーバーサイド)
    participant PY as Python計算<br/>(fortune_calculator)
    participant CHAT as AIチャット画面<br/>(ストリーミング)
    participant OAI as OpenAI API<br/>(GPT-4)
    participant DB as データベース<br/>(将来実装)
    
    Note over U,DB: 🚀 アプリ開始フロー
    
    U->>LP: アクセス
    LP->>Z: 初期状態確認
    alt 初回アクセス
        Z-->>LP: 空の状態
        LP->>U: ウェルカム画面表示
    else 復帰ユーザー
        Z-->>LP: 保存された状態
        LP->>U: 前回の続きから
    end
    
    Note over U,PY: 📝 基本情報入力フェーズ
    
    U->>IF: 名前入力
    IF->>Z: 状態更新 (name)
    Z->>IF: 進捗更新 (10%)
    IF->>U: 進捗バー表示
    
    U->>IF: 生年月日入力
    IF->>IF: フォームバリデーション実行
    alt バリデーション成功
        IF->>API: POST /api/fortune-calc<br/>{year, month, day}
        API->>CSV: CSVファイル読み込み
        CSV-->>API: 動物占いデータ
        API->>PY: Python実行<br/>get_basic_fortune_data()
        PY-->>API: {age, zodiac, animal, six_star}
        API-->>IF: JSON レスポンス
        IF->>Z: 状態更新 (fortune_data)
        Z->>IF: 進捗更新 (20%)
        IF->>U: 算出結果表示
    else バリデーションエラー
        IF->>U: エラーメッセージ表示
    end
    
    U->>IF: MBTI入力・選択
    IF->>Z: 状態更新 (mbti)
    Z->>IF: 進捗更新 (40%)
    
    U->>IF: 体癖番号入力
    IF->>Z: 状態更新 (taiheki)
    Z->>IF: 進捗更新 (70%)
    
    U->>IF: 基本情報確認・送信
    IF->>Z: 最終状態確認
    Z->>IF: 進捗更新 (100%)
    IF->>U: チャット準備画面
    
    Note over U,OAI: 💬 AIチャットフェーズ
    
    U->>CHAT: チャット画面遷移
    CHAT->>Z: 基本情報取得
    Z-->>CHAT: {name, birthdate, fortune, mbti, taiheki}
    
    CHAT->>OAI: システムプロンプト設定<br/>POST /chat/completions<br/>非ストリーミング
    OAI-->>CHAT: 初期設定完了
    
    CHAT->>U: 相談目的選択表示
    U->>CHAT: "悩み相談" 選択
    
    loop チャット対話ループ
        CHAT->>OAI: POST /chat/completions<br/>stream: true<br/>ユーザー情報 + 会話履歴
        
        Note over OAI: ストリーミングレスポンス
        
        OAI-->>CHAT: data: {"choices":[{"delta":{"content":"こ"}}]}
        CHAT->>U: リアルタイム表示更新
        OAI-->>CHAT: data: {"choices":[{"delta":{"content":"ん"}}]}
        CHAT->>U: 文字追加表示
        OAI-->>CHAT: data: {"choices":[{"delta":{"content":"に"}}]}
        CHAT->>U: 文字追加表示
        OAI-->>CHAT: data: [DONE]
        
        CHAT->>Z: 会話履歴更新
        CHAT->>U: 入力フォーム表示
        
        U->>CHAT: 回答入力・送信
        CHAT->>Z: ユーザー回答保存
        
        CHAT->>OAI: 追加質問判定<br/>非ストリーミング
        alt 追加質問あり
            OAI-->>CHAT: 次の質問
        else テーマ完了
            OAI-->>CHAT: 完了判定
        end
    end
    
    Note over U,DB: 📄 結果生成・プレビュー・送信フェーズ
    
    CHAT->>Z: 全会話データ取得
    Z-->>CHAT: 完全な対話履歴
    
    CHAT->>CHAT: .mdファイル生成<br/>クライアントサイド処理
    CHAT->>U: プレビュー画面表示<br/>内容確認
    
    U->>CHAT: 内容確認完了
    CHAT->>U: "送信中..." ローディング表示
    
    CHAT->>API: POST /api/admin-submit<br/>mdContent + metadata + userInfo
    Note over API,DB: データベース専用サイト処理
    
    API->>DB: 管理者用データ保存<br/>ダウンロードID生成
    alt 保存成功
        DB-->>API: {success: true, downloadId: "abc123", adminUrl: "https://admin.cocoseal.com/download/abc123"}
        API-->>CHAT: 送信完了レスポンス
        CHAT->>U: 完了画面表示<br/>"データが正常に送信されました"
    else 保存エラー
        DB-->>API: エラーレスポンス
        API-->>CHAT: {error: "送信に失敗しました"}
        CHAT->>U: エラー画面 + リトライボタン
        U->>CHAT: リトライクリック
        CHAT->>API: 再送信処理
    end
    
    Note over API,DB: 🔧 管理者向け機能
    rect rgb(240,248,255)
        Note over DB: 管理者がadminサイトでダウンロード
        DB->>DB: downloadId: abc123 でファイル取得
        DB->>DB: .mdファイル + メタデータ返却
        Note over DB: 管理者がClaude チャットに貼り付け
    end
    
    Note over U,Z: 🔄 エラーハンドリング・状態管理
    
    rect rgb(255,240,240)
        Note over U,OAI: エラーケース処理
        
        alt API タイムアウト
            OAI->>CHAT: ネットワークエラー
            CHAT->>U: "接続エラー - リトライしますか？"
            U->>CHAT: リトライクリック
            CHAT->>OAI: 再試行
        end
        
        alt フォームバリデーションエラー
            IF->>U: リアルタイムエラー表示
            U->>IF: 修正入力
            IF->>IF: 再バリデーション
        end
        
        alt 状態管理エラー
            Z->>Z: 状態復旧処理
            Z->>CHAT: デフォルト状態復元
        end
    end
    
    Note over U,DB: ✅ 完了・クリーンアップ
    
    CHAT->>Z: セッション状態クリア
    Z->>Z: 次回用の最小状態保持
    CHAT->>U: サンキューページ表示